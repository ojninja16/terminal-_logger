/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, LogEntry as PrismaLogEntry } from "@prisma/client";

export class LogEntryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LogEntryCountArgs, "select">): Promise<number> {
    return this.prisma.logEntry.count(args);
  }

  async logEntries<T extends Prisma.LogEntryFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LogEntryFindManyArgs>
  ): Promise<PrismaLogEntry[]> {
    return this.prisma.logEntry.findMany<Prisma.LogEntryFindManyArgs>(args);
  }
  async logEntry<T extends Prisma.LogEntryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LogEntryFindUniqueArgs>
  ): Promise<PrismaLogEntry | null> {
    return this.prisma.logEntry.findUnique(args);
  }
  async createLogEntry<T extends Prisma.LogEntryCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LogEntryCreateArgs>
  ): Promise<PrismaLogEntry> {
    return this.prisma.logEntry.create<T>(args);
  }
  async updateLogEntry<T extends Prisma.LogEntryUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LogEntryUpdateArgs>
  ): Promise<PrismaLogEntry> {
    return this.prisma.logEntry.update<T>(args);
  }
  async deleteLogEntry<T extends Prisma.LogEntryDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.LogEntryDeleteArgs>
  ): Promise<PrismaLogEntry> {
    return this.prisma.logEntry.delete(args);
  }
}
